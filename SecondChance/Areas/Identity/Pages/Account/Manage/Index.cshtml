@page
@model IndexModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = Model.IsCurrentUser ? "Gerenciar Perfil" : $"Perfil de {Model.UserProfile.FullName}";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<style>

    :root {
        --primary: #4a8f3e;
        --primary-light: #6abd5e;
        --primary-dark: #5a9f50;
        --bg-light: #e8f5e3;
        --bg-lighter: #f0f9ed;
        --border-light: #e0e9dc;
        --text-dark: #333;
        --text-medium: #555;
        --text-light: #888;
        --shadow-sm: 0 2px 4px rgba(0,0,0,0.05);
        --shadow-md: 0 4px 8px rgba(0,0,0,0.1);
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Arial, sans-serif;
    }

    body {
        background-color: #f5f5f5;
        color: var(--text-dark);
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .btn {
        border: none;
        padding: 10px 18px;
        border-radius: 6px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.2s;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-md);
    }

    .btn-primary {
        background-color: var(--primary-light);
        color: white;
    }

    .btn-primary:hover {
        background-color: var(--primary-dark);
    }

    .btn-cancel {
        background-color: #f5f5f5;
        color: var(--text-medium);
        border: 1px solid #ddd;
        margin-right: 10px;
    }

    .btn-cancel:hover {
        background-color: #e0e0e0;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

    .btn-danger:hover {
        background-color: #c82333;
    }

    .profile-card {
        display: flex;
        background-color: var(--bg-light);
        margin-bottom: 20px;
        padding: 20px;
        border-radius: 8px;
        position: relative;
        box-shadow: var(--shadow-sm);
    }

    .profile-image {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
        margin-right: 20px;
        border: 3px solid #fff;
        box-shadow: var(--shadow-sm);
    }

    .profile-details {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .profile-name {
        font-size: 22px;
        font-weight: bold;
        color: var(--primary);
        margin-bottom: 5px;
    }

    .profile-location {
        font-size: 16px;
        display: flex;
        align-items: center;
        margin-bottom: 3px;
    }

    .profile-location::before {
        content: '📍';
        margin-right: 5px;
    }

    .profile-date {
        font-size: 14px;
        color: var(--text-light);
        margin-bottom: 8px;
    }

    .profile-rating {
        margin-top: 5px;
        color: #f8b400;
        font-size: 18px;
    }

    .status-dots {
        display: flex;
        margin-top: 8px;
        align-items: center;
    }

    .dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        margin-right: 6px;
    }

    .dot-gray { background-color: #888; }
    .dot-green { background-color: #5cb85c; }

    .dot-status-text {
        font-size: 14px;
        color: var(--text-medium);
        margin-left: 5px;
    }

    .edit-button {
        position: absolute;
        top: 20px;
        right: 20px;
        background: none;
        border: none;
        cursor: pointer;
        font-size: 20px;
        color: var(--primary);
        transition: transform 0.2s;
    }

    .edit-button:hover {
        transform: scale(1.1);
    }

    .action-buttons {
        position: absolute;
        bottom: 20px;
        right: 20px;
        display: flex;
        gap: 12px;
    }

    .add-btn, .chat-btn {
        background-color: var(--primary-light);
        color: white;
    }

    .add-btn::before {
        content: '+ ';
        margin-right: 5px;
    }

    .chat-btn::before {
        content: '💬 ';
        margin-right: 5px;
    }

    .content-row {
        display: flex;
        margin-bottom: 25px;
        gap: 20px;
    }

    .bio-box {
        flex: 2;
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        border: 1px solid #e0e0e0;
        box-shadow: var(--shadow-sm);
    }

    .bio-box p {
        line-height: 1.6;
        font-size: 15px;
    }
    .reviews-box {
        flex: 1;
        background-color: var(--bg-lighter);
        padding: 20px;
        border-radius: 8px;
        overflow-y: auto;
        max-height: 220px;
        box-shadow: var(--shadow-sm);
    }

    .reviews-title {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 15px;
        color: var(--primary);
        border-bottom: 2px solid var(--border-light);
        padding-bottom: 8px;
    }

    .review {
        margin-bottom: 15px;
        padding-bottom: 15px;
        border-bottom: 1px solid var(--border-light);
    }

    .review:last-child {
        border-bottom: none;
        margin-bottom: 0;
        padding-bottom: 0;
    }

    .reviewer {
        display: flex;
        align-items: center;
        margin-bottom: 8px;
    }

    .reviewer-img {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        margin-right: 10px;
        border: 2px solid white;
    }

    .reviewer-name {
        font-weight: bold;
        font-size: 15px;
        color: #444;
    }

    .review-text {
        font-size: 14px;
        color: var(--text-medium);
        line-height: 1.5;
    }

    .divider {
        height: 1px;
        background-color: #e0e0e0;
        margin: 25px 0;
    }

    /* Formulário e modal */
    .profile-form {
        background-color: white;
        padding: 0;
        border-radius: 8px;
        border: 1px solid #e0e0e0;
        margin-top: 20px;
        box-shadow: var(--shadow-sm);
        display: none;
    }
    
    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        width: 100%;
        padding: 12px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 15px;
        transition: border-color 0.2s;
    }

    .form-control:focus {
        border-color: var(--primary-light);
        outline: none;
        box-shadow: 0 0 0 3px rgba(106,189,94,0.1);
    }

    .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: var(--text-medium);
    }

    .tab-container {
        background-color: #e0f3e0;
        border-radius: 8px;
        overflow: hidden;
    }

    .tab-buttons {
        display: flex;
        border-bottom: 1px solid #ccc;
    }

    .tab-btn {
        flex: 1;
        padding: 12px;
        font-size: 16px;
        font-weight: 600;
        background-color: #d0e9d0;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .tab-btn.active {
        background-color: #c2e3c2;
        border-bottom: 3px solid var(--primary);
    }

    .tab-content {
        display: none;
        padding: 20px;
        background-color: #e0f3e0;
    }

    .tab-content.active {
        display: block;
    }

    .password-change-fields {
        margin-top: 15px;
        padding: 15px;
        background-color: #d0e9d0;
        border-radius: 6px;
        display: none;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;
        padding: 0 20px 20px;
    }

    .input-with-icon {
        position: relative;
        display: flex;
        align-items: center;
    }

    .edit-icon {
        background: none;
        border: none;
        cursor: pointer;
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        font-size: 16px;
        color: var(--primary);
    }

    .deactivate-account {
        margin-top: 30px;
        padding: 15px;
        background-color: #fff8f8;
        border: 1px solid #f5c6cb;
        border-radius: 6px;
    }

    .deactivate-title {
        font-size: 16px;
        font-weight: 600;
        color: #721c24;
        margin-bottom: 10px;
    }

    .deactivate-text {
        font-size: 14px;
        color: var(--text-medium);
        margin-bottom: 15px;
        line-height: 1.5;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
    }

    .modal-content {
        background-color: white;
        margin: 15% auto;
        padding: 20px;
        border-radius: 8px;
        max-width: 500px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .modal-title {
        font-size: 18px;
        font-weight: 600;
        color: #721c24;
        margin-bottom: 15px;
    }

    .modal-buttons {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;
        gap: 10px;
    }

    /* Mensagens de status */
    .text-danger {
        color: #dc3545;
        font-size: 14px;
        margin-top: 5px;
    }

    .status-message {
        padding: 10px;
        border-radius: 6px;
        margin-bottom: 20px;
        display: none;
    }

    .status-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .status-error {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .sidebar {
        width: 220px;
        float: left;
        padding-right: 20px;
    }

    .sidebar-title {
        font-size: 20px;
        margin-bottom: 15px;
        color: var(--primary);
        font-weight: 600;
    }

    .sidebar-subtitle {
        font-size: 16px;
        margin-bottom: 8px;
        color: var(--text-medium);
        font-weight: 500;
    }

    .filter-option {
        display: block;
        padding: 10px 15px;
        margin-bottom: 5px;
        background-color: #f9f9f9;
        border-radius: 6px;
        font-weight: 500;
        color: var(--text-medium);
        cursor: pointer;
        transition: all 0.2s;
        text-decoration: none;
    }

    .filter-option:hover {
        background-color: var(--bg-lighter);
        color: var(--primary);
        transform: translateY(-2px);
    }

    .filter-option.active {
        background-color: var(--bg-light);
        color: var(--primary);
        border-left: 3px solid var(--primary);
    }

    /* Produtos */
    .products {
        margin-left: 240px;
    }

    .product-item {
        display: flex;
        background-color: white;
        margin-bottom: 20px;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: var(--shadow-sm);
        transition: transform 0.2s;
        border: 1px solid var(--bg-light);
    }

    .product-item:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-md);
    }

    .product-img {
        width: 150px;
        height: 150px;
        object-fit: cover;
    }

    .product-info {
        flex: 1;
        padding: 15px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .product-title {
        font-weight: 600;
        margin-bottom: 10px;
        color: var(--primary);
        font-size: 17px;
    }

    .product-desc {
        font-size: 14px;
        color: #666;
        line-height: 1.5;
    }

    .product-meta {
        padding: 15px;
        text-align: right;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        min-width: 180px;
        background-color: #f9fcf8;
        border-left: 1px solid var(--bg-light);
    }

    .product-location {
        font-weight: 600;
        font-size: 15px;
        color: var(--text-medium);
        display: flex;
        align-items: center;
        justify-content: flex-end;
    }

    .product-location::before {
        content: '📍';
        margin-right: 5px;
    }

    .product-date {
        font-size: 13px;
        color: var(--text-light);
        margin-top: 5px;
    }

    .product-category {
        font-size: 13px;
        background-color: var(--bg-light);
        padding: 5px 10px;
        border-radius: 20px;
        display: inline-block;
        margin-top: 10px;
        color: var (--primary);
        font-weight: 500;
    }
</style>

<div class="container">
    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        <div class="status-message @(Model.StatusMessage.Contains("sucesso") ? "status-success" : "status-error")" style="display: block;">
            @Model.StatusMessage
        </div>
    }


    <div class="profile-card">
        <img src="@(string.IsNullOrEmpty(Model.UserProfile.Image) ? "/Images/placeholder.jpg" : Model.UserProfile.Image)" alt="Imagem de Perfil" class="profile-image">
        <div class="profile-details">
            <div class="profile-name">@Model.UserProfile.FullName</div>
            <div class="profile-location">Localização: @Model.UserProfile.Location</div>
            <div class="profile-date">Membro desde @Model.UserProfile.JoinDate</div>
            <div class="profile-rating">★★★★☆</div>
            <div class="status-dots">
                <div class="dot @(Model.UserProfile.IsActive ? "dot-green" : "dot-gray")"></div>
                <span class="dot-status-text">@(Model.UserProfile.IsActive ? "Online" : "Offline")</span>
            </div>
        </div>
        @if (Model.IsCurrentUser)
        {
            <button class="edit-button" id="edit-profile-btn" title="Editar Perfil">✏️</button>
        }
        <div class="action-buttons">
            @if (Model.IsCurrentUser)
            {
                <a asp-controller="Products" asp-action="Create" class="add-btn btn">Adicionar Produto</a>
            }
            else
            {
                <a  class="chat-btn btn">Iniciar Chat</a>
            }
        </div>
    </div>



    <div class="content-row">
        <div class="bio-box">
            <p>@Model.UserProfile.Description</p>
        </div>
        <div class="reviews-box">
            <h3 class="reviews-title">Avaliações Recentes</h3>
            <div class="review">
                <div class="reviewer">
                    <img src="/Images/placeholder.jpg" alt="Paulo Silva" class="reviewer-img">
                    <div class="reviewer-name">Paulo Silva</div>
                </div>
                <div class="review-text">Muito simpática e responde rápido, muito obrigado @Model.Username!</div>
            </div>
            <div class="review">
                <div class="reviewer">
                    <img src="/Images/placeholder.jpg" alt="Joana Pais" class="reviewer-img">
                    <div class="reviewer-name">Joana Pais</div>
                </div>
                <div class="review-text">Enviei mensagem e em menos de 3 dias recebi o meu casaco, muito simpática a menina.</div>
            </div>
            <div class="review">
                <div class="reviewer">
                    <img src="/Images/placeholder.jpg" alt="Gregório Reis" class="reviewer-img">
                    <div class="reviewer-name">Gregório Reis</div>
                </div>
                <div class="review-text">Respondeu rápido ao pedido mas a qualidade da roupa parece ser mais em quarta mão de que em segunda.</div>
            </div>
        </div>
    </div>

    @if (Model.IsCurrentUser)
    {
        <div class="profile-form" id="profile-form">
            <div class="tab-container">
                <div class="tab-buttons">
                    <button type="button" class="tab-btn active" data-tab="public-data">Dados Públicos</button>
                    <button type="button" class="tab-btn" data-tab="private-data">Dados Privados</button>
                </div>

                <form method="post" enctype="multipart/form-data" asp-page="./Index">
                    <input type="hidden" asp-for="IsCurrentUser" value="true" />
                    <div class="tab-content active" id="public-data">
                        <div class="form-group">
                            <label class="form-label">Imagem de Perfil</label>
                            <div class="image-upload-container">
                                <div class="current-image-preview">
                                    <img id="image-preview" src="@(string.IsNullOrEmpty(Model.UserProfile.Image) ? "/Images/placeholder.jpg" : Model.UserProfile.Image)" alt="Preview" style="max-width: 100px; max-height: 100px; border-radius: 50%; margin-bottom: 10px;">
                                </div>
                                <input type="file" id="imageFile" name="ImageFile" accept="image/*" class="form-control" />
                                <small class="text-muted">Selecione uma imagem para o seu perfil</small>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Input_FullName" class="form-label">FullName</label>
                            <input type="text" id="Input_Username" name="Input.FullName" class="form-control" value="@Model.Input.FullName" />
                            <span asp-validation-for="Input.FullName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label for="Input_Location" class="form-label">Localização</label>
                            <input type="text" id="Input_Location" name="Input.Location" class="form-control" value="@Model.Input.Location" />
                            <span asp-validation-for="Input.Location" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label for="Input_Description" class="form-label">Descrição</label>
                            <textarea id="Input_Description" name="Input.Description" class="form-control" rows="4">@Model.Input.Description</textarea>
                            <span asp-validation-for="Input.Description" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="tab-content" id="private-data">
                        @if (Model.HasPassword)
                        {
                            <div class="form-group">
                                <label for="Input_CurrentPassword" class="form-label">Password:</label>
                                <div class="input-with-icon">
                                    <input type="password" id="Input_CurrentPassword" name="Input.CurrentPassword" class="form-control" value="************" readonly />
                                    <button type="button" class="edit-icon" id="edit-password-btn">✏️</button>
                                </div>
                            </div>
                            <div class="password-change-fields" id="password-change-fields">
                                <div class="form-group">
                                    <label for="Input_OldPassword" class="form-label">Password antiga:</label>
                                    <input type="password" id="Input_OldPassword" name="Input.OldPassword" class="form-control" />
                                    <span asp-validation-for="Input.OldPassword" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label for="Input_NewPassword" class="form-label">Nova Password:</label>
                                    <input type="password" id="Input_NewPassword" name="Input.NewPassword" class="form-control" />
                                    <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label for="Input_ConfirmPassword" class="form-label">Confirmar Password:</label>
                                    <input type="password" id="Input_ConfirmPassword" name="Input.ConfirmPassword" class="form-control" />
                                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <label class="form-label">Password:</label>
                                <div class="input-with-icon">
                                    <input type="text" class="form-control" value="Login externo - sem password local" readonly />
                                </div>
                                <small class="text-muted">Registo realizado com login externo não é possível alterar a senha.</small>
                            </div>
                        }

                        <div class="deactivate-account">
                            <h3 class="deactivate-title">Desativar Conta</h3>
                            <p class="deactivate-text">
                                Atenção: Desativar a sua conta removerá o seu acesso a esta plataforma. Esta ação não pode ser desfeita facilmente.
                            </p>
                            <button type="button" id="deactivate-account-btn" class="btn-danger">Desativar Conta</button>
                        </div>
                    </div>

                    <div class="form-actions">
                        <button type="button" id="cancel-edit-btn" class="btn-cancel">Cancelar</button>
                        <button type="submit" class="btn-primary">Salvar Alterações</button>
                    </div>
                </form>
            </div>
        </div>

        <div id="deactivate-modal" class="modal">
            <div class="modal-content">
                <h3 class="modal-title">Confirmar Desativação de Conta</h3>
                <p>Tem certeza que deseja desativar sua conta? Esta ação removerá seu acesso à plataforma.</p>
                <div class="modal-buttons">
                    <button id="cancel-deactivate-btn" class="btn-cancel">Cancelar</button>
                    <form method="post" asp-page-handler="DeactivateAccount">
                        <button type="submit" class="btn-danger">Sim, Desativar</button>
                    </form>
                </div>
            </div>
        </div>
    }

    <div class="divider"></div>

    <div class="sidebar">
        <h3 class="sidebar-title">Filtros</h3>
        <p class="sidebar-subtitle">Ordenar Por:</p>
        @if (Model.IsCurrentUser || string.IsNullOrEmpty(Model.UserProfile?.Id))
        {
            <a href="?sort=relevance" class="filter-option @(Model.CurrentSort == "relevance" || string.IsNullOrEmpty(Model.CurrentSort) ? "active" : "")">Relevância</a>
            <a href="?sort=category" class="filter-option @(Model.CurrentSort == "category" ? "active" : "")">Categoria</a>
            <a href="?sort=distance" class="filter-option @(Model.CurrentSort == "distance" ? "active" : "")">Distância</a>
        }
        else
        {
            <a href="?userId=@Model.UserProfile.Id&sort=relevance" class="filter-option @(Model.CurrentSort == "relevance" || string.IsNullOrEmpty(Model.CurrentSort) ? "active" : "")">Relevância</a>
            <a href="?userId=@Model.UserProfile.Id&sort=category" class="filter-option @(Model.CurrentSort == "category" ? "active" : "")">Categoria</a>
            <a href="?userId=@Model.UserProfile.Id&sort=distance" class="filter-option @(Model.CurrentSort == "distance" ? "active" : "")">Distância</a>
        }
    </div>


    
    <div class="products">
        @if (Model.UserProducts != null && Model.UserProducts.Any())
        {
            @foreach (var product in Model.UserProducts)
            {
                <div class="product-item">
                    <a asp-controller="Products" asp-action="Details" asp-route-id="@product.Id">
                        <img src="@(string.IsNullOrEmpty(product.Image) ? "/Images/placeholder.jpg" : product.Image)" alt="@product.Name" class="product-img">
                    </a>
                    <div class="product-info">
                        <div class="product-title">
                            <a asp-controller="Products" asp-action="Details" asp-route-id="@product.Id" class="text-decoration-none text-dark">
                                @product.Name
                            </a>
                        </div>
                        <div class="product-desc">
                            @(product.Description?.Length > 150 ? product.Description.Substring(0, 150) + "..." : product.Description)
                        </div>
                        @if (Model.IsCurrentUser)
                        {
                            <div class="mt-2">
                                <a asp-controller="Products" asp-action="Edit" asp-route-id="@product.Id" class="btn btn-sm btn-outline-primary">Editar</a>
                                <a asp-controller="Products" asp-action="Delete" asp-route-id="@product.Id" class="btn btn-sm btn-outline-danger">Excluir</a>
                            </div>
                        }
                    </div>
                    <div class="product-meta">
                        <div>
                            <div class="product-location">@product.Location</div>
                            <div class="product-date">Postado em: @product.PublishDate.ToString("dd/MM/yyyy")</div>
                        </div>
                        <div class="product-category">@product.Category</div>
                    </div>
                </div>
            }
            <div class="mt-3 text-center">
                @if (Model.IsCurrentUser)
                {
                    <a asp-controller="Products" asp-action="Index" class="btn btn-outline-success">Ver todos os meus produtos</a>
                }
                else
                {
                    <a asp-controller="Products" asp-action="UserProducts" asp-route-userId="@Model.UserProfile.Id" class="btn btn-outline-success">Ver todos os produtos de @Model.UserProfile.FullName</a>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info">
                @if (Model.IsCurrentUser)
                {
                    <h4>Você ainda não tem produtos cadastrados</h4>
                    <p>Que tal começar a compartilhar alguns itens que você não usa mais?</p>
                    <a asp-controller="Products" asp-action="Create" class="btn btn-success mt-2">Adicionar Produto</a>
                }
                else
                {
                    <h4>@Model.UserProfile.FullName ainda não tem produtos cadastrados</h4>
                    <p>Volte mais tarde para verificar os produtos deste usuário.</p>
                }
            </div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const els = {
            editProfileBtn: document.getElementById('edit-profile-btn'),
            cancelEditBtn: document.getElementById('cancel-edit-btn'),
            profileForm: document.getElementById('profile-form'),
            statusMessage: document.querySelector('.status-message'),
            tabBtns: document.querySelectorAll('.tab-btn'),
            tabContents: document.querySelectorAll('.tab-content'),
            editPasswordBtn: document.getElementById('edit-password-btn'),
            passwordFields: document.getElementById('password-change-fields'),
            deactivateBtn: document.getElementById('deactivate-account-btn'),
            deactivateModal: document.getElementById('deactivate-modal'),
            cancelDeactivateBtn: document.getElementById('cancel-deactivate-btn'),
            imageFile: document.getElementById('imageFile'),
            imagePreview: document.getElementById('image-preview')
        };


        if (els.imageFile && els.imagePreview) {
            els.imageFile.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        els.imagePreview.src = e.target.result;
                        document.querySelector('.profile-image').src = e.target.result;
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        els.editProfileBtn.addEventListener('click', function() {
            els.profileForm.style.display = 'block';
            els.profileForm.scrollIntoView({behavior: 'smooth'});
        });

        els.cancelEditBtn.addEventListener('click', function() {
            els.profileForm.style.display = 'none';
            els.passwordFields.style.display = 'none';
        });


        els.tabBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                els.tabBtns.forEach(b => b.classList.remove('active'));
                els.tabContents.forEach(c => c.classList.remove('active'));

                this.classList.add('active');
                const tabId = this.getAttribute('data-tab');
                document.getElementById(tabId).classList.add('active');
            });
        });

        if (els.editPasswordBtn) {
            els.editPasswordBtn.addEventListener('click', function() {
                els.passwordFields.style.display =
                    els.passwordFields.style.display === 'block' ? 'none' : 'block';
            });
        }

        if (els.deactivateBtn) {
            els.deactivateBtn.addEventListener('click', function() {
                if (els.deactivateModal) {
                    els.deactivateModal.style.display = 'block';
                }
            });
        }

        if (els.cancelDeactivateBtn) {
            els.cancelDeactivateBtn.addEventListener('click', function() {
                if (els.deactivateModal) {
                    els.deactivateModal.style.display = 'none';
                }
            });
        }

        window.addEventListener('click', function(event) {
            if (els.deactivateModal && event.target === els.deactivateModal) {
                els.deactivateModal.style.display = 'none';
            }
        });

        if (els.statusMessage) {
            setTimeout(function() {
                els.statusMessage.style.display = 'none';
            }, 5000);
        }

        const filterOptions = document.querySelectorAll('.filter-option');
        filterOptions.forEach(option => {
            option.addEventListener('click', function(e) {
                filterOptions.forEach(opt => opt.classList.remove('active'));
                this.classList.add('active');
            });
        });
    });
</script>