@model IEnumerable<SecondChance.Models.Product>
@using System.Security.Claims

@{
    ViewData["Title"] = "Produtos";
}

<style>
    body {
        background-color: #f5f5f5;
    }

    .search-container {
        display: flex;
        margin: 0 0 25px 0;
        background-image: url('/Images/ListaProdutos.png');
        background-size: cover;
        background-position: center;
        border-radius: 0;
        padding: 40px;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        position: relative;
        overflow: hidden;
        height: 200px;
        align-items: center;
        width: 100%;
    }

    .search-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.4);
        z-index: 1;
    }

    .search-content {
        position: relative;
        z-index: 2;
        width: 100%;
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .add-product-btn {
        background-color: #68B064;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.2s ease;
        white-space: nowrap;
    }

        .add-product-btn:hover {
            background-color: #5a9856;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

    .search-box {
        flex-grow: 1;
        display: flex;
        gap: 10px;
    }

        .search-box input {
            width: 100%;
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            background: white;
            font-size: 1rem;
        }

        .search-box button {
            background: #68B064;
            color: white;
            border: none;
            padding: 0 20px;
            border-radius: 5px;
            transition: all 0.2s ease;
        }

            .search-box button:hover {
                background: #5a9856;
            }

    .filters-container {
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .filters-header {
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 20px;
        color: #333;
        border-bottom: 2px solid #f0f0f0;
        padding-bottom: 10px;
    }

    .filter-section {
        margin-bottom: 20px;
    }

    .filter-header {
        font-weight: 600;
        margin-bottom: 12px;
        color: #444;
    }

    .form-select {
        border: 1px solid #e0e0e0;
        padding: 8px 12px;
        border-radius: 5px;
        width: 100%;
        margin-bottom: 10px;
        color: #444;
    }

        .form-select:focus {
            border-color: #68B064;
            outline: none;
            box-shadow: 0 0 0 2px rgba(104, 176, 100, 0.2);
        }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 20px;
        margin-top: 20px;
        width: 100%;
    }

    .product-card {
        background: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        transition: all 0.3s ease;
        border: 1px solid #eee;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .product-image {
        width: 100%;
        height: 200px;
        background-size: cover;
        background-position: center;
        position: relative;
    }

    .product-details {
        padding: 20px;
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .product-title {
        font-weight: 600;
        font-size: 1.1rem;
        margin-bottom: 10px;
        color: #333;
    }

    .product-description {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 15px;
        flex: 1;
    }

    .product-meta {
        margin-top: auto;
        border-top: 1px solid #eee;
        padding-top: 15px;
    }

    .product-location {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 5px;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .product-date {
        font-size: 0.85rem;
        color: #888;
    }

    .product-category {
        display: inline-block;
        background-color: #e9f5e9;
        color: #68B064;
        padding: 4px 12px;
        border-radius: 15px;
        font-size: 0.85rem;
        font-weight: 500;
        margin-top: 10px;
    }

    .product-actions {
        display: flex;
        gap: 8px;
        margin-top: 15px;
        justify-content: flex-end;
    }

        .product-actions a {
            padding: 6px 12px;
            font-size: 0.9rem;
            border-radius: 4px;
            text-decoration: none;
        }

    .alert {
        border-radius: 8px;
        margin-bottom: 20px;
    }

    .filter-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-bottom: 20px;
    }

    .filter-tag {
        background: #e9f5e9;
        color: #68B064;
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .filter-tag i {
            cursor: pointer;
        }

    .report-product-btn {
        padding: 5px 10px;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        color: #dc3545;
        border-radius: 4px;
        font-size: 0.8rem;
        cursor: pointer;
    }

        .report-product-btn:hover {
            background-color: #f2f2f2;
        }

    .contact-user-btn {
        padding: 5px 10px;
        background-color: #68B064;
        border: none;
        color: white;
        border-radius: 4px;
        font-size: 0.8rem;
        cursor: pointer;
    }

        .contact-user-btn:hover {
            background-color: #5a9856;
        }
</style>

@if (TempData["Message"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="search-container">
    <div class="search-overlay"></div>
    <div class="search-content">
        @if (User.Identity?.IsAuthenticated == true)
        {
            <a asp-action="Create" class="add-product-btn">
                <i class="fas fa-plus-circle me-2"></i>Adicionar Produto
            </a>
        }
        else
        {
            <a asp-area="Identity" asp-page="/Account/Login" class="add-product-btn">
                <i class="fas fa-sign-in-alt me-2"></i>Login para Adicionar
            </a>
        }
        <div class="search-box">
            <input type="text" id="searchInput" class="form-control" placeholder="O que deseja pesquisar?" value="@ViewBag.CurrentSearchTerm">
            <button type="button" id="searchButton">
                <i class="fas fa-search"></i>
            </button>
        </div>
    </div>
</div>

<div class="container-fluid px-4">
    <div class="row g-4">
        <div class="col-lg-2 col-md-3 mb-4">
            <div class="filters-container sticky-top" style="top: 20px;">
                <div class="filters-header">Filtros</div>

                <form id="filterForm" method="get">
                    <input type="hidden" name="searchTerm" value="@ViewBag.CurrentSearchTerm" />
                    <input type="hidden" name="userId" value="@ViewBag.CurrentUserId" />

                    <div class="filter-section">
                        <div class="filter-header">Ordenar Por</div>
                        <select name="sortOrder" class="form-select" onchange="this.form.submit()">
                            <option value="date_desc" selected="@(ViewBag.CurrentSortOrder == "date_desc" || ViewBag.CurrentSortOrder == null)">Mais recentes</option>
                            <option value="date_asc" selected="@(ViewBag.CurrentSortOrder == "date_asc")">Mais antigos</option>
                            <option value="name_asc" selected="@(ViewBag.CurrentSortOrder == "name_asc")">Nome (A-Z)</option>
                            <option value="name_desc" selected="@(ViewBag.CurrentSortOrder == "name_desc")">Nome (Z-A)</option>
                        </select>
                    </div>

                    <div class="filter-section">
                        <div class="filter-header">Categoria</div>
                        <select name="category" class="form-select" onchange="this.form.submit()">
                            <option value="Todas">Todas as categorias</option>
                            @if (ViewBag.Categories != null)
                            {
                                foreach (var category in ViewBag.Categories)
                                {
                                    if (!string.IsNullOrEmpty(category))
                                    {
                                        <option value="@category" selected="@(category == ViewBag.CurrentCategory)">@category</option>
                                    }
                                }
                            }
                        </select>
                    </div>

                    <div class="filter-section">
                        <div class="filter-header">Localização</div>
                        <select name="location" class="form-select" onchange="this.form.submit()">
                            <option value="Todas">Todas as localizações</option>
                            @if (ViewBag.Locations != null)
                            {
                                foreach (var location in ViewBag.Locations)
                                {
                                    if (!string.IsNullOrEmpty(location))
                                    {
                                        <option value="@location" selected="@(location == ViewBag.CurrentLocation)">@location</option>
                                    }
                                }
                            }
                        </select>
                    </div>

                    @if (!string.IsNullOrEmpty(ViewBag.CurrentSearchTerm) ||
                    !string.IsNullOrEmpty(ViewBag.CurrentCategory) ||
                    !string.IsNullOrEmpty(ViewBag.CurrentLocation) ||
                    !string.IsNullOrEmpty(ViewBag.CurrentSortOrder))
                    {
                        <a href="@Url.Action("Index", new { userId = ViewBag.CurrentUserId })" class="btn btn-outline-secondary w-100 mt-3">
                            <i class="fas fa-times-circle me-2"></i>Limpar Filtros
                        </a>
                    }
                </form>
            </div>
        </div>

        <div class="col-lg-10 col-md-9">
            @if (Model.Any())
            {
                @if (!string.IsNullOrEmpty(ViewBag.CurrentSearchTerm) ||
               !string.IsNullOrEmpty(ViewBag.CurrentCategory) && ViewBag.CurrentCategory != "Todas" ||
               !string.IsNullOrEmpty(ViewBag.CurrentLocation) && ViewBag.CurrentLocation != "Todas")
                {
                    <div class="filter-tags">
                        @if (!string.IsNullOrEmpty(ViewBag.CurrentSearchTerm))
                        {
                            <div class="filter-tag">
                                <i class="fas fa-search"></i>
                                @ViewBag.CurrentSearchTerm
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.CurrentCategory) && ViewBag.CurrentCategory != "Todas")
                        {
                            <div class="filter-tag">
                                <i class="fas fa-tag"></i>
                                @ViewBag.CurrentCategory
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.CurrentLocation) && ViewBag.CurrentLocation != "Todas")
                        {
                            <div class="filter-tag">
                                <i class="fas fa-map-marker-alt"></i>
                                @ViewBag.CurrentLocation
                            </div>
                        }
                    </div>
                }

                <div class="products-grid">
                    @foreach (var item in Model)
                    {
                        <div class="product-card">
                            <a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none">
                                <div class="product-image" style="background-image: url('@(string.IsNullOrEmpty(item.Image) ? "/Images/placeholder.jpg" : item.Image)');"></div>
                            </a>
                            <div class="product-details">
                                <a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none">
                                    <h3 class="product-title">@item.Name</h3>
                                    <p class="product-description">
                                        @(item.Description?.Length > 100 ? item.Description.Substring(0, 100) + "..." : item.Description)
                                    </p>
                                </a>

                                <div class="product-meta">
                                    <div class="product-location">
                                        <i class="fas fa-map-marker-alt"></i>
                                        @item.Location
                                    </div>
                                    <div class="product-date">
                                        Publicado em @item.PublishDate.ToString("dd/MM/yyyy")
                                    </div>
                                    <div class="product-category">
                                        <i class="fas fa-tag me-1"></i>
                                        @item.Category
                                    </div>
                                </div>

                                <div class="product-actions">
                                    @if (User.Identity?.IsAuthenticated == true && User.FindFirstValue(ClaimTypes.NameIdentifier) == item.OwnerId)
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit me-1"></i>Editar
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">
                                            <i class="fas fa-trash me-1"></i>Excluir
                                        </a>
                                    }
                                    else if (User.Identity?.IsAuthenticated == true)
                                    {

                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Nenhum produto encontrado com os critérios selecionados.
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            function buildSearchUrl(searchTerm) {
                const currentUrl = new URL(window.location.href);
                const params = new URLSearchParams(currentUrl.search);

                params.set('searchTerm', searchTerm);

                const category = $('select[name="category"]').val();
                const location = $('select[name="location"]').val();
                const sortOrder = $('select[name="sortOrder"]').val();
                const userId = $('input[name="userId"]').val();

                if (category && category !== 'Todas') params.set('category', category);
                if (location && location !== 'Todas') params.set('location', location);
                if (sortOrder) params.set('sortOrder', sortOrder);
                if (userId) params.set('userId', userId);

                return '@Url.Action("Index")?' + params.toString();
            }

            $('#searchInput').keypress(function(e) {
                if (e.which == 13) {
                    window.location.href = buildSearchUrl($(this).val());
                }
            });

            $('#searchButton').click(function() {
                window.location.href = buildSearchUrl($('#searchInput').val());
            });

            $('.report-product-btn').click(function(e) {
                e.preventDefault();
                $('#productId').val($(this).data('id'));
                new bootstrap.Modal(document.getElementById('reportProductModal')).show();
            });

            $('.contact-user-btn').click(function(e) {
                e.preventDefault();
                const productId = $(this).data('id');
                const ownerId = $(this).data('owner');
                window.location.href = '@Url.Action("Index", "Chat")?productId=' + productId + '&userId=' + ownerId;
            });
        });
    </script>
}