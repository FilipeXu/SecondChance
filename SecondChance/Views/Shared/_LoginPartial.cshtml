@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    var currentUser = await UserManager.GetUserAsync(User);
    bool isAdmin = currentUser != null && currentUser.IsAdmin;
}

<script>
    window.isUserAdmin = @(isAdmin ? "true" : "false");
</script>

@if (SignInManager.IsSignedIn(User))
{
    @if (isAdmin)
    {
        <li class="nav-item">
            <a class="nav-link text-white" asp-controller="Moderator" asp-action="Index" title="Moderação">
                <i class="fas fa-shield-alt"></i> Moderação
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" asp-controller="Support" asp-action="AdminDashboard" title="Suporte Admin">
                <i class="fas fa-headset"></i> Suporte Admin
            </a>
        </li>
    }
    <li class="nav-item">
        <a class="nav-link text-white" asp-controller="Chat" asp-action="Index" title="Mensagens">
            <i class="fas fa-comments"></i> Mensagens
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Gerir">
            <i class="fas fa-user"></i> Meu Perfil
        </a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Products", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-white">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}